{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "Discovery Connector - Using the IBM Cloudant Request node",
            "shortDescription": "Learn how to use the IBM Cloudant Request node (requires v12.0.5.0 or higher)",
            "durationText": "This tutorial takes approximately",
            "durationTime": "10 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MainFlow",
            "helpLink": 
			{
                "text": "IBM Documentation",
           		"link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/acesw_home.html"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "IBM Cloudant Request node"
                }
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM App Connect Enterprise to connect to IBM Cloudant and issue requests to create, retrieve, update, delete, or view objects in IBM Cloudant."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
					{
                       "section":"IBM® Cloudant® is a highly scalable JSON (JavaScript Object Notation) database service, which stores JSON formatted documents. This tutorial demonstrates how to develop and run a message flow that connects to IBM Cloudant and issues synchronous requests to retrieve information. The tutorial provides a partially completed message flow and describes the development process step-by-step as follows:"
					},
					{
                       "section":"1. Create a local integration server which has a vault for storing credentials"
					},					
					{
                       "section":"2. Launch the connector discovery process using a policy project which will be used to store an IBM Cloudant policy containing connection information."
					},
					{
                       "section":"3. Select the object and action which the IBM Cloudant Request node will execute"
					},
					{
                       "section":"4. Select Filters which influence the way in which the message flow selects data"
					},
					{
                       "section":"5. Save the results of the connector discovery process"
					},
					{
                       "section":"6. Deploy and test the message flow, policy and credentials using the local integration server"
					},
					{
                       "section":"For the convenience of more experienced users, the tutorial also provides a more complete version of the message flow, for which the connector discovery process has already been completed.  Instructions describe how to edit connection information in the policy, and how to create credentials to access your own instance of IBM Cloudant."
					},					
                    {
                        "section": "This tutorial requires access to an IBM Cloudant system."
                    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "IBM Documentation link to ",
						"description": "Using IBM Cloudant with IBM App Connect Enterprise",
						"link": "https://www.ibm.com/docs/SSTTDS_12.0?topic=applications-using-cloudant-app-connect-enterprise",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import projects",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "When you click Import, three projects will be imported into your workspace:"
                        },
						{
                            "section": "An application named <span class='application'>ExampleCloudant</span>"
                        },
						{
                            "section": "An application named <span class='application'>CompleteExampleCloudant</span>"
                        },
						{
                            "section": "A policy project named <span class='application'>CompletePolicyProjectCloudant</span>"
                        },
						{
                            "section": "<span class='application'>ExampleCloudant</span> contains a single message flow named <span class='application'>ExampleCloudantFlow</span>. To save you time, most of the message flow is ready for use, but the IBM Cloudant Request node has not yet been configured. This tutorial will guide you through the configuration of the node. The flow is driven by an HTTP input containing any well-formed JSON data, and uses a FlowOrder node to first acknowledge the input by echoing the same data back to the requesting client. Second in the flow sequence, the IBM Cloudant Request communicates with Cloudant. This node has its three output terminals (Failure, Out and NoData) wired to three separate Trace nodes to capture the results."
                        },
						{ 
                        	"section":"<span class='application'>CompleteExampleCloudant</span> is very similar to <span class='application'>ExampleCloudant</span> but the message flow which it contains, named  <span class='application'>ExampleCloudantFlow</span> (which exposes a different URL Fragment), has already had its IBM Cloudant Request node configured, and an associated policy with connection information has already been generated. If you wish to skip to the Run section of the tutorial, this application is used to demonstrate some administration concepts such as reusing discovered artifacts, editting policies and updating credentials."
                        },
                        {
			    			"section": "<span class='application'>CompletePolicyProjectCloudant</span> contains a single policy named <span class='application'>IBMCloudant1</span> which is used by the application <span class='application'>CompleteExampleCloudant</span>."							
						}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Developing integration solutions from scratch",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        },
						{
                            "title": "IBM Documentation link to ",
                            "description": "FileExists node",
                            "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-fileexists-node",
							"type": "web"
                        },
                        {
                             "title": "IBM Documentation link to ",
                             "description": "Long-lived variable",
                             "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=overview-long-lived-variables",
                             "type": "web"
                        }
						
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "The following steps help you to prepare your environment ready for running the message flow.",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": [
						{
"section": "<h4>This is a title of size h4</h4>",
"steps":
  {
    "type": "unordered",
    "details": [
      {
        "details": "This is the first unordered list item"
      },
      {
        "details": "This is the second unordered list item, which I will try to give sub-bullets",
        "substeps": {
          "type":"unordered",
          "details": [
            {
              "details": "This should be the first sub-bullet"
            },
            {
              "details": "This should be the second sub-bullet"
            },
            {
              "details": "This should be the third sub-bullet"
            }
          ]
		}
	  },
      {
        "details": "This is the third unordered list item"
      }
    ]
  }
},
				    {
                       "section":"<b>Create an Integration Server</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                            {
                                "details": "From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>. Leave all the options with their default values and click Finish. The local Integration Server will be started, using a project in your Toolkit's workspace as the work directory. Click OK to dismiss the Success dialog. "
                            }
						  ]
						}
					},
					{
                       "section":"<b>Launch the Connector Discovery</b>",
						  "steps":
                        {
                          "type": "unordered",
                          "details":
                          [
                             {
                                 "details": "Select the IBM Cloudant Request node and view its Properties in the window at the base of the screen. At this stage you will see an error stating that an action must be specified. Every Cloudant Request node (in fact, every Discovery Connector node) requires configuration to define what Action it should execute against what Object. Click the Launch Connector Discovery button."
							 },
							 {
                                 "details": "The Launch Connector Discovery wizard will open. It requires three property values:<ul><li>Policy Project: Click the New button and create a policy project named ExamplePolicyProjectCloudant</li><li>Work directory: Click the Browse button and navigate to the TEST_SERVER directory in your Toolkit workspace. For example, this would be C:\\workspace\\TEST_SERVER if your Toolkit workspace were at C:\\workspace.</li><li>Vault Key: Type the same vault key which you used when creating your local integration server (named TEST_SERVER) earlier in the tutorial, for example password123</li></ul><br>The process of connecting to Cloudant and discovering information from it, will cause your Cloudant credentials to be saved in the vault, and your Cloudant connection information to be saved in a policy (in the policy project specified)."
							}
						  ]
						}
					},
					{
                       "section":"<b>Create the directory which the FileExists node will poll</b>",
						  "steps":
                        {
                          "type": "ordered",
                          "details":
                          [
                             {
                                 "details": "On Windows: Create the directory <code>C:\\temp\\FileExistsDemo</code>."
                                             },
                                             {
                                 "details": "On Linux: Create a suitable directory such as <code>/tmp/FileExistsDemo</code> and change the Input directory property of the FileExists node accordingly to point to the same directory."
                                             }
						  ]
						}
					},	
					{
                            "section": "Next you will use the Flow exerciser to send HTTP requests to the message flow."
                    }
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
{
"section": "<h4>This is a title of size h4</h4>",
"steps":
  {
    "type": "unordered",
    "details": [
      {
        "details": "This is the first unordered list item"
      },
      {
        "details": "This is the second unordered list item, which I will try to give sub-bullets",
        "substeps": {
          "type":"unordered",
          "details": [
            {
              "details": "This should be the first sub-bullet"
            },
            {
              "details": "This should be the second sub-bullet"
            },
            {
              "details": "This should be the third sub-bullet"
            }
          ]
		}
	  },
      {
        "details": "This is the third unordered list item"
      }
    ]
  }
},
					
					{
  
								"section": "<h4>Use the Flow Exerciser to test the tutorial scenario",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    {
                                        "details": "Open <span class='resource'>FileExistsFlow.msgflow</span> and click the Flow Exerciser icon <img src='http://ot4i.github.io/ot4i.tutorials//dist/images/icons/iib/startFlowExerciser.png' alt='' /> to start testing the flow (if you have already deployed the flow you will be asked whether you want to redeploy it which should only be necessary if you have subsequently changed the flow since it was last deployed)."
                                        },
										{
                                            "details": "Click the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. One saved message is provided, named Input1, which can be used to invoke the HTTP Input node..."
                                        },																				
                                        {
                                            "details": "The input message <span class='resource'>Input1</span> contains this data:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CountryCode\": \"UK\"<br>}</code><br><br>Select this input message and click Send and your message is sent to the HTTPInput node. You will receive a JSON reply message structured like this:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CountryCode\": \"UK\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CountryName\": \"Unknown\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CacheInfo\": \"Cache has not yet been initialised\"<br>}</code><br><br>After you close the dialog, the path taken through the message flow will be highlighted."
										},
										{										
										  "details": "Copy the provided input file from <code>&lt;Integration Toolkit workspace&gt;/ApplicationFileExists/CountryCodes.txt</code> to the input directory that you created on your file system earlier. The file will be processed by the message flow to update its cache and will then be deleted. This may take a few seconds as the polling interval of the flow is set to 20 seconds."
										},										                                        
										{
										 "details":"In the Flow Exerciser toolbar, click the View Path icon <img src='http://ot4i.github.io/iib-tutorials/images/icons/iib/viewPath.png' alt='View path' /> to highlight the message path through the message flow. You should now see a second path highlighted in the flow (FileExists > Update Cache? > File Read > Update Cache > CacheUpdated) demonstrating the actions of the FileExists node. The flow will have noticed that the in-memory cache had not previously been populated and will have used the content of the file you copied to populate the cache. The Trace node at the end of the flow named CacheUpdated should have created an entry in the trace file (file location discussed earlier in the Prepare section of this tutorial) with content similar to the following:<br><code>===== Trace at 2022-03-30 15:32:44.841308 =====<br>File Name = 'CountryCodes.txt'<br>File LastModified = GMTTIMESTAMP '2022-03-30 11:24:28'<br>Cache LastModified = GMTTIMESTAMP '2022-03-30 15:32:44.840285'<br>The flow has updated its cache, either because it has not previously been initialised, or because the FileExists node was triggered by a file whose LastModified timestamp was more recent than the time of the last cache update.<br></code>"											
										},
										{
                                            "details": "Now that the cache has been populated we will re-test the bottom branch of the flow by clicking the Send Message icon <img src='http://ot4i.github.io/ot4i.tutorials/dist/images/icons/iib/sendMessage.png' alt='' />. Using the same saved message, named Input1, we will repeat the earlier test but this time you should see a different reply message..."
										},	
										{
                                            "details": "The input message <span class='resource'>Input1</span> contains this data:<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CountryCode\": \"UK\"<br>}</code><br><br>Select this input message and click Send and your message is sent to the HTTPInput node. You will receive a JSON reply message structured like this (but with a different timestamp):<br><code>{<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CountryCode\": \"UK\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CountryName\": \"United Kingdom\",<br>&nbsp;&nbsp;&nbsp;&nbsp;\"CacheInfo\": \"Cache was last updated at GMTTIMESTAMP '2022-03-30 15:32:44.840285'\"<br>}</code><br><br>After you close the dialog, the path taken through the messageflow will be highlighted."
										},
										{
                                            "details": "You can now run a further test, demonstrating the last branch of the message flow. Repeat the copy of the provided input file from <code>&lt;Integration Toolkit workspace&gt;/ApplicationFileExists/CountryCodes.txt</code> to the input directory that you created on your file system earlier. This time, the cache won't need initialising and will have already been updated more recently than the Last Modified timestamp of the file, so after the flow propagates to the trace node named CacheNotUpdated, the last action of the flow will be to delete the file. If you check back in the trace file, you should see a slightly different trace message has been appended by the node CacheNotUpdated:<br><code>===== Trace at 2022-03-30 15:36:44.946730 =====<br>File Name = 'CountryCodes.txt'<br>File LastModified = GMTTIMESTAMP '2022-03-30 11:24:28'<br>There is nothing further for the flow to do at this time, because the FileExists node was triggered by a file whose LastModified timestamp was earlier than the latest cache update time.<br></code>"
										},
										{
										 "details": "If you make an edit to the CountryCodes.txt file (for example, add a new country to the list) and resave the file so that it has been recently modified (after the last update to the cache), then you should be able to copy it to the input directory for the FileExists node and the flow will update its cache again."
										}										
                                        ]
                                    }
                            }

                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "IBM Documentation link to ",
                            "description": "FileExists node",
                            "link": "https://www.ibm.com/docs/en/app-connect/12.0?topic=nodes-fileexists-node",
							"type": "web"
                        },
                        {
                            "title": "IBM Documentation link to ",
                            "description": "Testing your message flow by using the Flow exerciser",
                            "link": "https://www.ibm.com/docs/SSTTDS_12.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
